// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // points to .env file
}

enum UserRole {
  ADMIN
  STUDENT
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String?
  role      UserRole   @default(STUDENT)
  exams     UserExam[]
  createdAt DateTime   @default(now())
}

model Exam {
  id        String     @id @default(uuid())   // Primary key (UUID)
  name      String                           // Exam name
  syllabus  Json?                            // Optional JSON syllabus
  users     UserExam[]                       // Relation: many users can take exam
  subjects  Subject[]                        // Relation: exam has many subjects
  createdAt DateTime   @default(now())       // Timestamp
}


model UserExam {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  exam      Exam     @relation(fields: [examId], references: [id])
  examId    String
  progress  Json     // progress per exam (JSON: { topic1: 40, topic2: 70 })
  createdAt DateTime @default(now())
}

model Subject {
  id     String  @id @default(uuid())
  name   String
  exam   Exam    @relation(fields: [examId], references: [id])
  examId String
  topics Topic[]
}

model Topic {
  id        String     @id @default(uuid())
  name      String
  subject   Subject    @relation(fields: [subjectId], references: [id])
  subjectId String
  questions Question[]
}

model Question {
  id            String @id @default(uuid())
  text          String
  options       String // JSON array of options
  correctAnswer String
  topic         Topic  @relation(fields: [topicId], references: [id])
  topicId       String
}
