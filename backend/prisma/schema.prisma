generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique 
  name      String?
  createdAt DateTime   @default(now())
  role      UserRole   @default(STUDENT)
  password  String
  exams     UserExam[]
  answers   Answer[]
}

model Exam {
  id        String     @id @default(uuid())
  name      String     
  syllabus  Json?
  createdAt DateTime   @default(now())
  subjects  Subject[]
  users     UserExam[]
}

model UserExam {
  id        String   @id @default(uuid())
  userId    String
  examId    String
  progress  Json
  createdAt DateTime @default(now())
  exam      Exam     @relation(fields: [examId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Subject {
  id     String  @id @default(uuid())
  name   String
  examId String
  exam   Exam    @relation(fields: [examId], references: [id])
  topics Topic[]
}

model Topic {
  id        String     @id @default(uuid())
  name      String
  subjectId String
  questions Question[]
  subject   Subject    @relation(fields: [subjectId], references: [id])
}

model Question {
  id        String   @id @default(uuid())
  text      String
  topicId   String
  topic     Topic    @relation(fields: [topicId], references: [id])
  options   Option[]
  answers   Answer[]
}

model Option {
  id         String   @id @default(uuid())
  text       String
  isCorrect  Boolean  @default(false)
  questionId String
  question   Question @relation(fields: [questionId], references: [id])
  answers    Answer[]
}

model Answer {
  id         String   @id @default(uuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  questionId String
  question   Question @relation(fields: [questionId], references: [id])
  optionId   String
  option     Option   @relation(fields: [optionId], references: [id])
  createdAt  DateTime @default(now())
}

enum UserRole {
  ADMIN
  STUDENT
}
